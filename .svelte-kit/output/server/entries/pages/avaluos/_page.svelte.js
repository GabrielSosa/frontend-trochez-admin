import { c as create_ssr_component, v as validate_component, e as escape, f as add_attribute } from "../../../chunks/ssr.js";
import "@sveltejs/kit/internal";
import "../../../chunks/exports.js";
import "../../../chunks/state.svelte.js";
import { N as Navbar } from "../../../chunks/Navbar.js";
import "toastify-js";
/* empty css                       */
import "sweetalert2";
const css = {
  code: ".overflow-x-auto.svelte-ymzynl::-webkit-scrollbar{height:8px}.overflow-x-auto.svelte-ymzynl::-webkit-scrollbar-track{background:#f3f4f6;border-radius:4px}.overflow-x-auto.svelte-ymzynl::-webkit-scrollbar-thumb{background:#d1d5db;border-radius:4px}.overflow-x-auto.svelte-ymzynl::-webkit-scrollbar-thumb:hover{background:#9ca3af}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { goto } from '$app/navigation';\\n  import Navbar from '$lib/components/Navbar.svelte';\\n  import { ApiUrls, apiFetch } from '$lib/api';\\n  import { showSuccess, showError, showInfo } from '$lib/utils/toast.js';\\n  import { confirmDuplicate, confirmDelete } from '$lib/utils/confirm.js';\\n\\n  let user = null;\\n  let searchQuery = '';\\n  let avaluos = [];\\n  let filteredAvaluos = [];\\n  let isLoading = true;\\n  let searchTimeout = null;\\n  let isSearching = false;\\n  \\n  // Pagination variables\\n  let currentPage = 1;\\n  let itemsPerPage = 10;\\n  let totalPages = 0;\\n  let total = 0;\\n  let paginatedAvaluos = [];\\n  let generatingCertificate = false;\\n  let generatingCertificateId = null;\\n  let isChangingPage = false;\\n  let duplicatingAvaluo = false;\\n  let duplicatingAvaluoId = null;\\n  let deletingAvaluo = false;\\n  let deletingAvaluoId = null;\\n  \\n\\n\\n\\n  // Function to load avalúos data with backend pagination\\n  async function loadAvaluos(page = 1, search = '') {\\n    try {\\n      isLoading = true;\\n      \\n      let url;\\n      let params;\\n      \\n      if (search && search.trim()) {\\n        // Use search endpoint\\n        params = new URLSearchParams({\\n          query: search.trim(),\\n          page: page.toString(),\\n          limit: itemsPerPage.toString()\\n        });\\n        url = \`https://api-backend-trochez.onrender.com/api/appraisals/search?\${params}\`;\\n      } else {\\n        // Use regular endpoint\\n        params = new URLSearchParams({\\n          page: page.toString(),\\n          limit: itemsPerPage.toString()\\n        });\\n        url = \`\${ApiUrls.AVALUOS.getAll}?\${params}\`;\\n      }\\n      \\n      const response = await apiFetch(url);\\n      \\n      // Handle different response formats\\n      let data;\\n      \\n      if (response.data && response.pagination) {\\n        // New format with pagination metadata\\n        data = response.data;\\n        total = response.pagination.total_count;\\n        totalPages = response.pagination.total_pages;\\n\\n      } else if (response.avaluos && response.total !== undefined) {\\n        // Alternative format with pagination metadata\\n        data = response.avaluos;\\n        total = response.total;\\n        totalPages = response.totalPages || Math.ceil(total / itemsPerPage);\\n      } else {\\n        // Fallback to old format\\n        data = response;\\n        total = data.length;\\n        totalPages = 1;\\n      }\\n      \\n      avaluos = data.map(item => ({\\n        id: item.id,\\n        vehicle_appraisal_id: item.vehicle_appraisal_id || item.id,\\n        fecha: item.appraisal_date || '',\\n        cliente: item.applicant || '',\\n        vehiculo: \`\${item.brand || ''} \${item.vehicle_description || ''} \${item.model_year || ''}\`.trim(),\\n        placa: item.plate_number || '',\\n        valor: item.appraisal_value_trochez, \\n        color: item.color || '',\\n        kilometraje: item.mileage || '',\\n        combustible: item.fuel_type || '',\\n        motor: item.engine_size || '',\\n        propietario: item.owner || '',\\n        valorUSD: item.appraisal_value_usd,\\n        vin: item.vin || '',\\n        numeroMotor: item.engine_number || '',\\n        notas: item.notes || '',\\n        validezDias: item.validity_days,\\n        validezKms: item.validity_kms,\\n        extras: item.extras || '',\\n        deduccion: item.deductions || '',\\n        cert: item.cert || ''\\n      }));\\n      \\n      // Update pagination variables\\n      filteredAvaluos = [...avaluos];\\n      currentPage = page;\\n      updatePageData();\\n      \\n      // Clear any previous search results to avoid duplicates\\n      if (search) {\\n        // If searching, we only want the current page results\\n        filteredAvaluos = [...avaluos];\\n      }\\n      \\n\\n      \\n    } catch (error) {\\n      // Provide more detailed error information\\n      let errorMessage = 'Error al cargar los avalúos.';\\n      \\n      if (error.status === 401) {\\n        errorMessage = 'Error de autenticación. Por favor, inicie sesión nuevamente.';\\n        // Redirect to login page after a short delay\\n        setTimeout(() => goto('/login'), 2000);\\n      } else if (error.message) {\\n        errorMessage += ' ' + error.message;\\n      }\\n      \\n      // Provide some feedback to the user\\n      notifications.error(errorMessage);\\n    } finally {\\n      isLoading = false;\\n    }\\n  }\\n\\n  onMount(async () => {\\n    // Get user data from localStorage if available\\n    const userData = localStorage.getItem('userData');\\n    if (userData) {\\n      try {\\n        user = JSON.parse(userData);\\n      } catch (e) {\\n        \\n      }\\n    }\\n\\n    // Load avalúos data\\n    await loadAvaluos(1, '');\\n\\n    // Add visibility change listener to reload data when returning from other pages\\n    const handleVisibilityChange = () => {\\n      if (!document.hidden) {\\n        // Reload data when page becomes visible (user returns from create/edit)\\n        loadAvaluos(1, searchQuery);\\n      }\\n    };\\n\\n    document.addEventListener('visibilitychange', handleVisibilityChange);\\n\\n    // Cleanup function\\n    return () => {\\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\\n    };\\n  });\\n\\n  // Search avalúos using backend with debounce\\n  function handleSearch() {\\n    // Clear previous timeout\\n    if (searchTimeout) {\\n      clearTimeout(searchTimeout);\\n    }\\n    \\n    // Show searching indicator\\n    isSearching = true;\\n    \\n    // Set new timeout for 500ms\\n    searchTimeout = setTimeout(async () => {\\n      // Reset to first page when searching\\n      currentPage = 1;\\n      await loadAvaluos(currentPage, searchQuery);\\n      \\n      // Hide searching indicator\\n      isSearching = false;\\n    }, 500);\\n  }\\n  \\n  // Update the current page data (now using backend pagination)\\n  function updatePageData() {\\n    // With backend pagination, the data is already paginated\\n    paginatedAvaluos = [...filteredAvaluos];\\n  }\\n  \\n  // Helper function to create array for pagination\\n  function createPageArray(count) {\\n    return Array.from({ length: count }, (_, i) => i + 1);\\n  }\\n  \\n  // Go to specific page using backend\\n  async function goToPage(page) {\\n    if (page >= 1 && page <= totalPages && !isChangingPage) {\\n      isChangingPage = true;\\n      currentPage = page;\\n      try {\\n        await loadAvaluos(page, searchQuery);\\n      } finally {\\n        isChangingPage = false;\\n      }\\n    }\\n  }\\n\\n  // Navigate to create new avalúo page\\n  function handleCreateNew() {\\n    goto('/avaluos/nuevo');\\n  }\\n\\n  // Format currency\\n  function formatCurrency(value) {\\n    return new Intl.NumberFormat('es-CR', {\\n      style: 'currency',\\n      currency: 'CRC'\\n    }).format(value);\\n  }\\n\\n  // Format date\\n  function formatDate(dateString) {\\n    if (!dateString) return '';\\n    \\n    const date = new Date(dateString);\\n    \\n    // Check if the date is valid\\n    if (isNaN(date.getTime())) {\\n      return '';\\n    }\\n    \\n    return new Intl.DateTimeFormat('es-CR', {\\n      year: 'numeric',\\n      month: 'short',\\n      day: 'numeric'\\n    }).format(date);\\n  }\\n  \\n  // Duplicate avalúo function\\n  async function showDuplicateConfirmDialog(avaluoId) {\\n    const confirmed = await confirmDuplicate();\\n    if (confirmed) {\\n      executeDuplicate(avaluoId);\\n    }\\n  }\\n\\n  async function executeDuplicate(avaluoId) {\\n    try {\\n      // Set loading state\\n      duplicatingAvaluo = true;\\n      duplicatingAvaluoId = avaluoId;\\n      \\n      // Start safety timeout\\n      resetStuckStates();\\n\\n      const token = localStorage.getItem('jwtToken');\\n      if (!token) {\\n        showError('No se encontró token de autenticación. Por favor inicie sesión nuevamente.');\\n        setTimeout(() => goto('/login'), 1000);\\n        return;\\n      }\\n\\n      const response = await fetch(\`\${ApiUrls.AVALUOS.getAll}/\${avaluoId}/duplicate\`, {\\n        method: 'POST',\\n        headers: {\\n          'Authorization': \`Bearer \${token}\`,\\n          'Content-Type': 'application/json'\\n        }\\n      });\\n\\n      if (!response.ok) {\\n        throw new Error(\`Error al duplicar el avalúo: \${response.status} \${response.statusText}\`);\\n      }\\n\\n      const data = await response.json();\\n      \\n      if (data.vehicle_appraisal_id) {\\n        showSuccess('Avalúo duplicado exitosamente');\\n        // Redirect to edit page with the new ID\\n        goto(\`/avaluos/\${data.vehicle_appraisal_id}/editar\`);\\n      } else {\\n        throw new Error('No se recibió el ID del avalúo duplicado');\\n      }\\n    } catch (error) {\\n      showError(\`Error al duplicar el avalúo: \${error.message}\`);\\n      // Ensure states are reset even on error\\n      duplicatingAvaluo = false;\\n      duplicatingAvaluoId = null;\\n    } finally {\\n      // Reset loading state\\n      duplicatingAvaluo = false;\\n      duplicatingAvaluoId = null;\\n    }\\n  }\\n\\n  // Delete avalúo function\\n  async function showDeleteConfirmDialog(avaluoId) {\\n    const confirmed = await confirmDelete();\\n    if (confirmed) {\\n      executeDelete(avaluoId);\\n    }\\n  }\\n  \\n  // Safety timeout to reset states if they get stuck\\n  function resetStuckStates() {\\n    setTimeout(() => {\\n      if (deletingAvaluo) {\\n        deletingAvaluo = false;\\n        deletingAvaluoId = null;\\n        console.warn('Reset stuck deleting state');\\n      }\\n      if (duplicatingAvaluo) {\\n        duplicatingAvaluo = false;\\n        duplicatingAvaluoId = null;\\n        console.warn('Reset stuck duplicating state');\\n      }\\n      if (generatingCertificate) {\\n        generatingCertificate = false;\\n        generatingCertificateId = null;\\n        console.warn('Reset stuck generating certificate state');\\n      }\\n    }, 10000); // 10 seconds timeout\\n  }\\n\\n  async function executeDelete(avaluoId) {\\n    try {\\n      // Set loading state\\n      deletingAvaluo = true;\\n      deletingAvaluoId = avaluoId;\\n      \\n      // Start safety timeout\\n      resetStuckStates();\\n\\n      const token = localStorage.getItem('jwtToken');\\n      if (!token) {\\n        showError('No se encontró token de autenticación. Por favor inicie sesión nuevamente.');\\n        setTimeout(() => goto('/login'), 1000);\\n        return;\\n      }\\n\\n      const response = await fetch(\`\${ApiUrls.AVALUOS.getAll}/\${avaluoId}\`, {\\n        method: 'DELETE',\\n        headers: {\\n          'Authorization': \`Bearer \${token}\`\\n        }\\n      });\\n\\n      if (!response.ok) {\\n        throw new Error(\`Error al eliminar el avalúo: \${response.status} \${response.statusText}\`);\\n      }\\n\\n      // Refresh the list\\n      await loadAvaluos(currentPage, searchQuery);\\n      showSuccess('Avalúo eliminado exitosamente');\\n    } catch (error) {\\n      showError(\`Error al eliminar el avalúo: \${error.message}\`);\\n      // Ensure states are reset even on error\\n      deletingAvaluo = false;\\n      deletingAvaluoId = null;\\n    } finally {\\n      // Reset loading state\\n      deletingAvaluo = false;\\n      deletingAvaluoId = null;\\n    }\\n  }\\n\\n  // Open certificate with JWT token - Improved to avoid popup blockers\\n  async function openCertificate(avaluoId) {\\n    try {\\n      const token = localStorage.getItem('jwtToken');\\n      if (!token) {\\n        showError('No se encontró token de autenticación. Por favor inicie sesión nuevamente.');\\n        setTimeout(() => goto('/login'), 1000);\\n        return;\\n      }\\n      \\n      // Set generating flag\\n      generatingCertificate = true;\\n      generatingCertificateId = avaluoId;\\n      \\n      // Start safety timeout\\n      resetStuckStates();\\n      \\n      // Make a fetch request with the JWT token in the Authorization header\\n      const response = await fetch(ApiUrls.CERTIFICADOS.get(avaluoId), {\\n        method: 'GET',\\n        headers: {\\n          'Authorization': \`Bearer \${token}\`\\n        }\\n      });\\n      \\n      if (!response.ok) {\\n        throw new Error(\`Error al obtener el certificado: \${response.status} \${response.statusText}\`);\\n      }\\n      \\n      // Check content type to handle different response types\\n      const contentType = response.headers.get('content-type');\\n      \\n      if (contentType && contentType.includes('application/pdf')) {\\n        // Handle PDF response\\n        const blob = await response.blob();\\n        const url = window.URL.createObjectURL(blob);\\n        \\n        // Try multiple methods to open the PDF\\n        try {\\n          // Method 1: Try window.open first\\n          const newWindow = window.open(url, '_blank');\\n          \\n          // Check if popup was blocked\\n          if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\\n            // Method 2: Create a temporary link and click it\\n            const link = document.createElement('a');\\n            link.href = url;\\n            link.target = '_blank';\\n            link.download = \`certificado_\${avaluoId}.pdf\`;\\n            document.body.appendChild(link);\\n            link.click();\\n            document.body.removeChild(link);\\n            \\n            // Show user message\\n            setTimeout(() => {\\n              showInfo('El certificado se está descargando. Si no se abrió automáticamente, revisa tu carpeta de descargas.');\\n            }, 100);\\n          }\\n        } catch (popupError) {\\n          // Method 3: Fallback to download\\n          const link = document.createElement('a');\\n          link.href = url;\\n          link.download = \`certificado_\${avaluoId}.pdf\`;\\n          document.body.appendChild(link);\\n          link.click();\\n          document.body.removeChild(link);\\n          \\n          showInfo('El certificado se está descargando. Revisa tu carpeta de descargas.');\\n        }\\n      } else if (contentType && contentType.includes('application/json')) {\\n        // Handle JSON response (might contain a URL or error)\\n        const data = await response.json();\\n        if (data.url) {\\n          try {\\n            const newWindow = window.open(data.url, '_blank');\\n            if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\\n              // Fallback: open in same window\\n              window.location.href = data.url;\\n            }\\n          } catch (popupError) {\\n            window.location.href = data.url;\\n          }\\n        } else {\\n          throw new Error(data.message || 'Error al generar el certificado');\\n        }\\n      } else {\\n        // Handle other response types\\n        const blob = await response.blob();\\n        const url = window.URL.createObjectURL(blob);\\n        \\n        try {\\n          const newWindow = window.open(url, '_blank');\\n          if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\\n            const link = document.createElement('a');\\n            link.href = url;\\n            link.target = '_blank';\\n            link.download = \`certificado_\${avaluoId}.pdf\`;\\n            document.body.appendChild(link);\\n            link.click();\\n            document.body.removeChild(link);\\n          }\\n        } catch (popupError) {\\n          const link = document.createElement('a');\\n          link.href = url;\\n          link.download = \`certificado_\${avaluoId}.pdf\`;\\n          document.body.appendChild(link);\\n          link.click();\\n          document.body.removeChild(link);\\n        }\\n      }\\n    } catch (error) {\\n      showError(\`Error al obtener el certificado: \${error.message}\`);\\n    } finally {\\n      // Ensure generating flag is reset\\n      generatingCertificate = false;\\n      generatingCertificateId = null;\\n    }\\n  }\\n<\/script>\\n\\n<div class=\\"min-h-screen bg-gray-50\\">\\n  <Navbar {user} />\\n\\n  <main class=\\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\\">\\n    <div class=\\"flex justify-between items-center mb-6\\">\\n      <h1 class=\\"text-2xl font-bold text-gray-800\\">Gestión de Avalúos</h1>\\n      <div class=\\"flex gap-2\\">\\n        <button \\n          on:click={() => loadAvaluos(1, searchQuery)}\\n          disabled={isLoading}\\n          class=\\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center\\"\\n        >\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-5 w-5 mr-2\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n            <path fill-rule=\\"evenodd\\" d=\\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\\" clip-rule=\\"evenodd\\" />\\n          </svg>\\n          {isLoading ? 'Actualizando...' : 'Actualizar'}\\n        </button>\\n        <button \\n          on:click={handleCreateNew}\\n          class=\\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center\\"\\n        >\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-5 w-5 mr-2\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n            <path fill-rule=\\"evenodd\\" d=\\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\\" clip-rule=\\"evenodd\\" />\\n          </svg>\\n          Nuevo Avalúo\\n        </button>\\n      </div>\\n    </div>\\n\\n        <!-- Search and filters -->\\n    <div class=\\"bg-white rounded-lg shadow p-4 mb-6\\">\\n      <div class=\\"flex-1\\">\\n        <label for=\\"search\\" class=\\"block text-sm font-medium text-gray-700 mb-1\\">Buscar Avalúos</label>\\n        <div class=\\"relative\\">\\n          <input\\n            id=\\"search\\"\\n            type=\\"text\\"\\n            bind:value={searchQuery}\\n            on:input={handleSearch}\\n            placeholder=\\"Buscar por placa, cliente, vehículo, VIN, certificado...\\"\\n            class=\\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 pl-10\\"\\n          />\\n          <div class=\\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\\">\\n            {#if isSearching}\\n              <div class=\\"animate-spin h-5 w-5 border-b-2 border-blue-600 rounded-full\\"></div>\\n            {:else}\\n              <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-5 w-5 text-gray-400\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n                <path fill-rule=\\"evenodd\\" d=\\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\\" clip-rule=\\"evenodd\\" />\\n              </svg>\\n            {/if}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Avalúos table -->\\n    <div class=\\"bg-white rounded-lg shadow overflow-hidden max-w-full\\">\\n      {#if isLoading}\\n        <div class=\\"p-8 flex justify-center\\">\\n          <div class=\\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\\"></div>\\n        </div>\\n      {:else if filteredAvaluos.length === 0}\\n        <div class=\\"p-8 text-center text-gray-500\\">\\n          No se encontraron avalúos que coincidan con la búsqueda.\\n        </div>\\n      {:else if paginatedAvaluos.length === 0 && filteredAvaluos.length > 0}\\n        <div class=\\"p-8 text-center text-gray-500\\">\\n          Cargando datos para la página actual...\\n        </div>\\n      {:else}\\n        <div class=\\"overflow-x-auto shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\\" style=\\"scrollbar-width: thin; scrollbar-color: #d1d5db #f3f4f6;\\">\\n          <table class=\\"min-w-full divide-y divide-gray-200\\" style=\\"min-width: 900px;\\">\\n            <thead class=\\"bg-gray-50\\">\\n              <tr>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">ID</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">No. Certificado</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">Fecha</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">Cliente</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">Vehículo</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">Placa</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">Valor</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">Color</th>\\n                <th scope=\\"col\\" class=\\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\\">Acciones</th>\\n              </tr>\\n            </thead>\\n            <tbody class=\\"bg-white divide-y divide-gray-200\\">\\n              {#each paginatedAvaluos as avaluo (avaluo.vehicle_appraisal_id)}\\n                <tr class=\\"hover:bg-gray-50\\">\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\\">#{avaluo.vehicle_appraisal_id}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\\">{avaluo.cert || 'N/A'}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">{formatDate(avaluo.fecha)}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">{avaluo.cliente}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">{avaluo.vehiculo}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">{avaluo.placa}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">{formatCurrency(avaluo.valor)}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">{avaluo.color}</td>\\n                  <td class=\\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\\">\\n                    <div class=\\"flex items-center justify-end space-x-2\\">\\n                      <!-- Editar -->\\n                      <a \\n                        href={\`/avaluos/\${avaluo.vehicle_appraisal_id}/editar\`} \\n                        class=\\"p-2 text-indigo-600 hover:text-indigo-900 hover:bg-indigo-50 rounded-full transition-colors duration-200 {duplicatingAvaluo || deletingAvaluo || generatingCertificate ? 'opacity-50 pointer-events-none' : ''}\\"\\n                        title=\\"Editar avalúo\\"\\n                      >\\n                        <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-4 w-4\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n                          <path d=\\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\\" />\\n                        </svg>\\n                      </a>\\n                      \\n                      <!-- Duplicar -->\\n                      <button \\n                        on:click={() => showDuplicateConfirmDialog(avaluo.vehicle_appraisal_id)}\\n                        class=\\"p-2 text-blue-600 hover:text-blue-900 hover:bg-blue-50 rounded-full transition-colors duration-200\\"\\n                        disabled={duplicatingAvaluo}\\n                        title=\\"Duplicar avalúo\\"\\n                      >\\n                        {#if duplicatingAvaluo && duplicatingAvaluoId === avaluo.vehicle_appraisal_id}\\n                          <div class=\\"animate-spin h-4 w-4 border-b-2 border-blue-600 rounded-full\\"></div>\\n                        {:else}\\n                          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-4 w-4\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n                            <path d=\\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\\" />\\n                            <path d=\\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\\" />\\n                          </svg>\\n                        {/if}\\n                      </button>\\n                      \\n                      <!-- Certificado -->\\n                      <button \\n                        on:click={() => openCertificate(avaluo.vehicle_appraisal_id)} \\n                        class=\\"p-2 text-green-600 hover:text-green-900 hover:bg-green-50 rounded-full transition-colors duration-200\\"\\n                        disabled={generatingCertificate || duplicatingAvaluo || deletingAvaluo}\\n                        title=\\"Imprimir certificado\\"\\n                      >\\n                        {#if generatingCertificate && generatingCertificateId === avaluo.vehicle_appraisal_id}\\n                          <div class=\\"animate-spin h-4 w-4 border-b-2 border-green-600 rounded-full\\"></div>\\n                        {:else}\\n                          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-4 w-4\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n                            <path fill-rule=\\"evenodd\\" d=\\"M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zm0 8H7v4h6v-4z\\" clip-rule=\\"evenodd\\" />\\n                          </svg>\\n                        {/if}\\n                      </button>\\n                      \\n                      <!-- Eliminar -->\\n                      <button \\n                        on:click={() => showDeleteConfirmDialog(avaluo.vehicle_appraisal_id)}\\n                        class=\\"p-2 text-red-600 hover:text-red-900 hover:bg-red-50 rounded-full transition-colors duration-200\\"\\n                        disabled={deletingAvaluo}\\n                        title=\\"Eliminar avalúo\\"\\n                      >\\n                        {#if deletingAvaluo && deletingAvaluoId === avaluo.vehicle_appraisal_id}\\n                          <div class=\\"animate-spin h-4 w-4 border-b-2 border-red-600 rounded-full\\"></div>\\n                        {:else}\\n                          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"h-4 w-4\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\">\\n                            <path fill-rule=\\"evenodd\\" d=\\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\\" clip-rule=\\"evenodd\\" />\\n                          </svg>\\n                        {/if}\\n                      </button>\\n                    </div>\\n                  </td>\\n                </tr>\\n              {/each}\\n            </tbody>\\n          </table>\\n        </div>\\n        \\n        <!-- Pagination controls -->\\n\\n        \\n        {#if totalPages > 1}\\n          <div class=\\"px-6 py-4 flex items-center justify-between border-t border-gray-200\\">\\n            <div class=\\"flex-1 flex justify-between sm:hidden\\">\\n              <div class=\\"flex items-center space-x-2\\">\\n                <label for=\\"itemsPerPageMobile\\" class=\\"text-xs text-gray-700\\">Registros:</label>\\n                <select\\n                  id=\\"itemsPerPageMobile\\"\\n                  bind:value={itemsPerPage}\\n                  on:change={() => loadAvaluos(1, searchQuery)}\\n                  class=\\"px-2 py-1 text-xs border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\\"\\n                >\\n                  <option value={10}>10</option>\\n                  <option value={25}>25</option>\\n                  <option value={50}>50</option>\\n                  <option value={100}>100</option>\\n                </select>\\n              </div>\\n              <div class=\\"flex space-x-2\\">\\n                <button \\n                  on:click={() => goToPage(currentPage - 1)} \\n                  disabled={currentPage === 1 || isChangingPage}\\n                  class=\\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\\"\\n                >\\n                  {#if isChangingPage}\\n                    <div class=\\"animate-spin h-4 w-4 border-b-2 border-gray-600 rounded-full mr-2\\"></div>\\n                  {/if}\\n                  Anterior\\n                </button>\\n                <button \\n                  on:click={() => goToPage(currentPage + 1)} \\n                  disabled={currentPage === totalPages || isChangingPage}\\n                  class=\\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\\"\\n                >\\n                  {#if isChangingPage}\\n                    <div class=\\"animate-spin h-4 w-4 border-b-2 border-gray-600 rounded-full mr-2\\"></div>\\n                  {/if}\\n                  Siguiente\\n                </button>\\n              </div>\\n            </div>\\n            <div class=\\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\\">\\n              <div class=\\"flex items-center space-x-4\\">\\n                <div>\\n                  <p class=\\"text-sm text-gray-700\\">\\n                    Mostrando <span class=\\"font-medium\\">{(currentPage - 1) * itemsPerPage + 1}</span> a <span class=\\"font-medium\\">{Math.min(currentPage * itemsPerPage, filteredAvaluos.length)}</span> de <span class=\\"font-medium\\">{total}</span> resultados\\n                  </p>\\n                </div>\\n                <div class=\\"flex items-center space-x-2\\">\\n                  <label for=\\"itemsPerPage\\" class=\\"text-sm text-gray-700\\">Registros:</label>\\n                  <select\\n                    id=\\"itemsPerPage\\"\\n                    bind:value={itemsPerPage}\\n                    on:change={() => loadAvaluos(1, searchQuery)}\\n                    class=\\"px-2 py-1 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\\"\\n                  >\\n                    <option value={10}>10</option>\\n                    <option value={25}>25</option>\\n                    <option value={50}>50</option>\\n                    <option value={100}>100</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div>\\n                <nav class=\\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\\" aria-label=\\"Pagination\\">\\n                  <!-- Previous page button -->\\n                  <button\\n                    on:click={() => goToPage(currentPage - 1)}\\n                    disabled={currentPage === 1 || isChangingPage}\\n                    class=\\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\\"\\n                  >\\n                    <span class=\\"sr-only\\">Anterior</span>\\n                    {#if isChangingPage}\\n                      <div class=\\"animate-spin h-4 w-4 border-b-2 border-gray-600 rounded-full\\"></div>\\n                    {:else}\\n                      <svg class=\\"h-5 w-5\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\" aria-hidden=\\"true\\">\\n                        <path fill-rule=\\"evenodd\\" d=\\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\\" clip-rule=\\"evenodd\\" />\\n                      </svg>\\n                    {/if}\\n                  </button>\\n                  \\n                  <!-- Page numbers -->\\n                  {#each createPageArray(totalPages) as pageNum}\\n                    {#if pageNum === currentPage || pageNum === 1 || pageNum === totalPages || (pageNum >= currentPage - 1 && pageNum <= currentPage + 1)}\\n                      <button\\n                        on:click={() => goToPage(pageNum)}\\n                        disabled={isChangingPage}\\n                        class=\\"relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium {currentPage === pageNum ? 'text-blue-600 bg-blue-50' : 'text-gray-700 hover:bg-gray-50'} disabled:opacity-50 disabled:cursor-not-allowed\\"\\n                      >\\n                        {pageNum}\\n                      </button>\\n                    {:else if pageNum === currentPage - 2 || pageNum === currentPage + 2}\\n                      <span class=\\"relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700\\">\\n                        ...\\n                      </span>\\n                    {/if}\\n                  {/each}\\n                  \\n                  <!-- Next page button -->\\n                  <button\\n                    on:click={() => goToPage(currentPage + 1)}\\n                    disabled={currentPage === totalPages || isChangingPage}\\n                    class=\\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\\"\\n                  >\\n                    <span class=\\"sr-only\\">Siguiente</span>\\n                    {#if isChangingPage}\\n                      <div class=\\"animate-spin h-4 w-4 border-b-2 border-gray-600 rounded-full\\"></div>\\n                    {:else}\\n                      <svg class=\\"h-5 w-5\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 20 20\\" fill=\\"currentColor\\" aria-hidden=\\"true\\">\\n                        <path fill-rule=\\"evenodd\\" d=\\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\\" clip-rule=\\"evenodd\\" />\\n                      </svg>\\n                    {/if}\\n                  </button>\\n                </nav>\\n              </div>\\n            </div>\\n          </div>\\n        {/if}\\n      {/if}\\n    </div>\\n  </main>\\n</div>\\n\\n\\n\\n<style>\\n  /* Estilos personalizados para el scrollbar */\\n  .overflow-x-auto::-webkit-scrollbar {\\n    height: 8px;\\n  }\\n  \\n  .overflow-x-auto::-webkit-scrollbar-track {\\n    background: #f3f4f6;\\n    border-radius: 4px;\\n  }\\n  \\n  .overflow-x-auto::-webkit-scrollbar-thumb {\\n    background: #d1d5db;\\n    border-radius: 4px;\\n  }\\n  \\n  .overflow-x-auto::-webkit-scrollbar-thumb:hover {\\n    background: #9ca3af;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAixBE,8BAAgB,mBAAoB,CAClC,MAAM,CAAE,GACV,CAEA,8BAAgB,yBAA0B,CACxC,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GACjB,CAEA,8BAAgB,yBAA0B,CACxC,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GACjB,CAEA,8BAAgB,yBAAyB,MAAO,CAC9C,UAAU,CAAE,OACd"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let user = null;
  let searchQuery = "";
  $$result.css.add(css);
  return `<div class="min-h-screen bg-gray-50">${validate_component(Navbar, "Navbar").$$render($$result, { user }, {}, {})} <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8"><div class="flex justify-between items-center mb-6"><h1 class="text-2xl font-bold text-gray-800" data-svelte-h="svelte-1psqzro">Gestión de Avalúos</h1> <div class="flex gap-2"><button ${"disabled"} class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd"></path></svg> ${escape("Actualizando...")}</button> <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center" data-svelte-h="svelte-fqaqf8"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
          Nuevo Avalúo</button></div></div>  <div class="bg-white rounded-lg shadow p-4 mb-6"><div class="flex-1"><label for="search" class="block text-sm font-medium text-gray-700 mb-1" data-svelte-h="svelte-1rufmzp">Buscar Avalúos</label> <div class="relative"><input id="search" type="text" placeholder="Buscar por placa, cliente, vehículo, VIN, certificado..." class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 pl-10"${add_attribute("value", searchQuery, 0)}> <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">${`<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path></svg>`}</div></div></div></div>  <div class="bg-white rounded-lg shadow overflow-hidden max-w-full">${`<div class="p-8 flex justify-center" data-svelte-h="svelte-1jvpo63"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div></div>`}</div></main> </div>`;
});
export {
  Page as default
};
